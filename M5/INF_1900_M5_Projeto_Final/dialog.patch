diff --git a/M5/INF_1900_M5_Projeto_Final/truco/interface/Dialog.cpp b/M5/INF_1900_M5_Projeto_Final/truco/interface/Dialog.cpp
index 7215254..b7b8a40 100644
--- a/M5/INF_1900_M5_Projeto_Final/truco/interface/Dialog.cpp
+++ b/M5/INF_1900_M5_Projeto_Final/truco/interface/Dialog.cpp
@@ -32,7 +32,7 @@ namespace ui {
 	}
 
 	Dialog::Dialog(CWnd* window, int x, int y, DialogType type, std::wstring message, bool isVisible,
-		CommonEventHandle aceiteEventHandler, CommonEventHandle recusarEventHandler, CommonEventHandle pedirEventHandler)
+		CommonEventHandle aceiteEventHandler, CommonEventHandle recusarEventHandler, CommonEventHandle pedirEventHandler, CommonEventHandle okEventHandler)
 		: BaseControl(window, x, y, DIALOG_WIDTH, DIALOG_HEIGHT)
 	{
 		auto pCanvas = m_pCanvas.get();
@@ -40,6 +40,7 @@ namespace ui {
 		m_dialogType = type;
 
 		m_aceiteEventHandler = aceiteEventHandler;
+		m_okEventHandler = okEventHandler;
 		m_recusarEventHandler = recusarEventHandler;
 		m_pedirEventHandler = pedirEventHandler;
 
@@ -56,6 +57,7 @@ namespace ui {
 		m_message->setFontSize(22);
 
 		m_pAceitarButton = ButtonFactory::CreateDialogAceitarButton(pCanvas, 180, 120);
+		m_pOkButton = ButtonFactory::CreateDialogAceitarButton(pCanvas, 320, 120);
 		m_pRecusarButton = ButtonFactory::CreateDialogRecusarButton(pCanvas, 320, 120);
 		m_pPedirButton = ButtonFactory::CreateDialogPedirButton(pCanvas, 460, 120, TypeButton::DialogPedirSeis);		
 
@@ -63,19 +65,25 @@ namespace ui {
 			if (m_aceiteEventHandler != nullptr) {
 				m_aceiteEventHandler();
 			}
-			};
+		};
+
+		m_pOkButton->OnLeftMouseButtonDownHandle = [&](int x, int y) {
+			if (m_okEventHandler != nullptr) {
+				m_okEventHandler();
+			}
+		};
 
 		m_pRecusarButton->OnLeftMouseButtonDownHandle = [&](int x, int y) {
 			if (m_recusarEventHandler != nullptr) {
 				m_recusarEventHandler();
 			}
-			};
+		};
 
 		m_pPedirButton->OnLeftMouseButtonDownHandle = [&](int x, int y) {
 			if (m_pedirEventHandler != nullptr) {
 				m_pedirEventHandler();
 			}
-			};
+		};
 
 		setVisible(isVisible);
 	}
@@ -86,10 +94,12 @@ namespace ui {
 		BaseControl::draw();
 		m_pIcon->draw();
 		m_pAceitarButton->draw();
+		m_pOkButton->draw();
 		m_pRecusarButton->draw();
 		m_pPedirButton->draw();
 
 		m_pAceitarButton->setVisible(!(!m_aceiteEventHandler));
+		m_pOkButton->setVisible(!(!m_okEventHandler));
 		m_pRecusarButton->setVisible(!(!m_recusarEventHandler));
 		m_pPedirButton->setVisible(!(!m_pedirEventHandler));
 	}
@@ -101,6 +111,7 @@ namespace ui {
 			CPoint dialogPoint(point.x - getBounds()->left, point.y - getBounds()->top);
 
 			m_pAceitarButton->LeftMouseButtonDown(dialogPoint);
+			m_pOkButton->LeftMouseButtonDown(dialogPoint);
 			m_pRecusarButton->LeftMouseButtonDown(dialogPoint);
 			m_pPedirButton->LeftMouseButtonDown(dialogPoint);
 		}
@@ -115,13 +126,14 @@ namespace ui {
 		m_x = 0;
 		m_y = 0;
 		m_aceiteEventHandler = nullptr;
+		m_okEventHandler = nullptr;
 		m_recusarEventHandler = nullptr;
 		m_pedirEventHandler = nullptr;
 	}
 
 	std::shared_ptr<Dialog> DialogBuilder::build()
 	{
-		return std::make_shared<Dialog>(m_parent, m_x, m_y, m_dialogType, m_message, m_isVisible, m_aceiteEventHandler, m_recusarEventHandler, m_pedirEventHandler);
+		return std::make_shared<Dialog>(m_parent, m_x, m_y, m_dialogType, m_message, m_isVisible, m_aceiteEventHandler, m_recusarEventHandler, m_pedirEventHandler, m_okEventHandler);
 	}
 
 	DialogBuilder DialogBuilder::WithDialogType(DialogType type)
@@ -155,6 +167,12 @@ namespace ui {
 		return *this;
 	}
 
+	DialogBuilder DialogBuilder::WithOkButton(CommonEventHandle eventHandler)
+	{
+		m_okEventHandler = eventHandler;
+		return *this;
+	}
+
 	DialogBuilder DialogBuilder::WithRecusarButton(CommonEventHandle eventHandler)
 	{
 		m_recusarEventHandler = eventHandler;
diff --git a/M5/INF_1900_M5_Projeto_Final/truco/interface/Dialog.h b/M5/INF_1900_M5_Projeto_Final/truco/interface/Dialog.h
index 8133629..871b5d4 100644
--- a/M5/INF_1900_M5_Projeto_Final/truco/interface/Dialog.h
+++ b/M5/INF_1900_M5_Projeto_Final/truco/interface/Dialog.h
@@ -35,10 +35,12 @@ namespace ui {
 		std::unique_ptr<CustomLabel> m_message;
 
 		std::shared_ptr<BaseButton> m_pAceitarButton;
+		std::shared_ptr<BaseButton> m_pOkButton;
 		std::shared_ptr<BaseButton> m_pRecusarButton;
 		std::shared_ptr<BaseButton> m_pPedirButton;
 
 		CommonEventHandle m_aceiteEventHandler;
+		CommonEventHandle m_okEventHandler;
 		CommonEventHandle m_recusarEventHandler;
 		CommonEventHandle m_pedirEventHandler;
 
@@ -46,7 +48,7 @@ namespace ui {
 
 	public:
 		Dialog(CWnd* window, int x, int y, DialogType type, std::wstring message, bool isVisible = false,
-			CommonEventHandle aceiteEventHandler = nullptr, CommonEventHandle recusarEventHandler = nullptr, CommonEventHandle pedirEventHandler = nullptr);
+			CommonEventHandle aceiteEventHandler = nullptr, CommonEventHandle recusarEventHandler = nullptr, CommonEventHandle pedirEventHandler = nullptr, CommonEventHandle okEventHandler = nullptr);
 
 		// Inherited via BaseView
 		void draw() override;
@@ -63,6 +65,7 @@ namespace ui {
 		int m_y;
 		bool m_isVisible;
 		CommonEventHandle m_aceiteEventHandler;
+		CommonEventHandle m_okEventHandler;
 		CommonEventHandle m_recusarEventHandler;
 		CommonEventHandle m_pedirEventHandler;
 		CWnd* m_parent;
@@ -75,6 +78,7 @@ namespace ui {
 		DialogBuilder WithPosition(int x, int y);
 		DialogBuilder WithVisible(bool isVisible);
 		DialogBuilder WithAceitarButton(CommonEventHandle eventHandler);
+		DialogBuilder WithOkButton(CommonEventHandle eventHandler);
 		DialogBuilder WithRecusarButton(CommonEventHandle eventHandler);
 		DialogBuilder WithPedirButton(CommonEventHandle eventHandler);
 	};
